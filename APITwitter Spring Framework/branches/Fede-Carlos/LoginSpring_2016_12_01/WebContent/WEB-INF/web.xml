<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>APITwitterWeb</display-name>
  <listener>
    <listener-class>  
        com.sun.xml.ws.transport.http.servlet.WSServletContextListener  
     </listener-class>
  </listener>
  
  <servlet>
    <servlet-name>NeighboursWS</servlet-name>
    <servlet-class>  
        com.sun.xml.ws.transport.http.servlet.WSServlet  
      </servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>NeighboursWS</servlet-name>
    <url-pattern>/services/soap/NeighboursWS</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>ClinicalStudyWS</servlet-name>
    <servlet-class>  
        com.sun.xml.ws.transport.http.servlet.WSServlet  
      </servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ClinicalStudyWS</servlet-name>
    <url-pattern>/services/soap/EstudiosWS</url-pattern>
  </servlet-mapping>
  <servlet>
		<description>
		</description>
		<display-name>APITwitterLogin</display-name>
		<servlet-name>APITwitterLogin</servlet-name>
		<servlet-class>uned.java2016.apitwitterweb.servlets.APITwitterLogin</servlet-class>
  </servlet>
  <servlet>
		<description>
		</description>
		<display-name>APITwitterLogout</display-name>
		<servlet-name>APITwitterLogout</servlet-name>
		<servlet-class>uned.java2016.apitwitterweb.servlets.APITwitterLogout</servlet-class>
  </servlet>	
  <servlet>
		<description>
		</description>
		<display-name>APITwitterView</display-name>
		<servlet-name>APITwitterView</servlet-name>
		<servlet-class>uned.java2016.apitwitterweb.servlets.APITwitterView</servlet-class>
  </servlet>
  <servlet>
		<description>
		</description>
		<display-name>APITwitterAdm</display-name>
		<servlet-name>APITwitterAdm</servlet-name>
		<servlet-class>uned.java2016.apitwitterweb.servlets.APITwitterAdm</servlet-class>
  </servlet>
  <servlet>
		<description>
		</description>
		<display-name>APITwitterOBJ</display-name>
		<servlet-name>APITwitterOBJ</servlet-name>
		<servlet-class>uned.java2016.apitwitterweb.servlets.APITwitterOBJ</servlet-class>
  </servlet>
  
  
  <!-- Incluimos el provider JAX-RS de referencia, jersey -->
  <servlet>   
    <servlet-name>jersey</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <!-- Indicamos las aplicaciones jersey -->
    <init-param>
       <param-name>javax.ws.rs.Application</param-name>
       <param-value>uned.java2016.apitwitter.services.rs.RSApplication</param-value>
    </init-param>
  </servlet>
  <!-- incluimos los mappings para ejecutar los servicios JAX-RS -->
  <servlet-mapping>
    <servlet-name>jersey</servlet-name>
    <url-pattern>/services/rs/*</url-pattern>
  </servlet-mapping>
  
  
  <servlet-mapping>
		<servlet-name>APITwitterLogin</servlet-name>
		<url-pattern>/APITwitterLogin1</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
		<servlet-name>APITwitterLogout</servlet-name>
		<url-pattern>/APITwitterLogout</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
		<servlet-name>APITwitterView</servlet-name>
		<url-pattern>/APITwitterView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
		<servlet-name>APITwitterAdm</servlet-name>
		<url-pattern>/APITwitterAdm</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
		<servlet-name>APITwitterOBJ</servlet-name>
		<url-pattern>/APITwitterOBJ</url-pattern>
  </servlet-mapping>
  
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  
  <!-- incluimos el contexto de Spring -->
  <listener>
     <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
  <!-- incluimos el servlet Dispatcher de Spring -->
  <servlet>
   <servlet-name>springDispatcher</servlet-name>
   <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
     <load-on-startup>1</load-on-startup>
 </servlet>
 <!-- incluimos el mapeo para el servlet Dispatcher de Spring -->
 <servlet-mapping>
  <servlet-name>springDispatcher</servlet-name>
  <url-pattern>*.do</url-pattern>
  <url-pattern>/APITwitterLogin/*</url-pattern>
 </servlet-mapping>
  
  
</web-app>