package es.csc.biblioteca.books.gui;

import es.csc.biblioteca.i18n.LocaleManager;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;
import es.csc.biblioteca.books.dao.BookDTO;
import es.csc.biblioteca.i18n.LocaleManager;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowListener;

/**
 *
 * @author David Atencia
 * @version 0.1
 */
public class BooksManagementView extends JInternalFrame {

    int filaseleccionada =0;
    
    public BooksManagementView() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuBooks = new javax.swing.JPopupMenu();
        jMenuItemAddBook = new javax.swing.JMenuItem();
        jMenuItemEditBook = new javax.swing.JMenuItem();
        jMenuItemDeleteBook = new javax.swing.JMenuItem();
        jLabel10 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnPreview = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooks = new javax.swing.JTable();
        lblId = new javax.swing.JLabel();
        lblIdBook = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lblAuthor = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        lblTopic = new javax.swing.JLabel();
        txtTopic = new javax.swing.JTextField();
        lblWarningTitle = new javax.swing.JLabel();
        lblWarningAuthor = new javax.swing.JLabel();
        lblWarningTopic = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        jMenuItemAddBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_add.png"))); // NOI18N
        jMenuItemAddBook.setText("jMenuItem1");
        jPopupMenuBooks.add(jMenuItemAddBook);

        jMenuItemEditBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_view.png"))); // NOI18N
        jMenuItemEditBook.setText("jMenuItem1");
        jPopupMenuBooks.add(jMenuItemEditBook);

        jMenuItemDeleteBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_delete.png"))); // NOI18N
        jMenuItemDeleteBook.setText("jMenuItem1");
        jMenuItemDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteBookActionPerformed(evt);
            }
        });
        jPopupMenuBooks.add(jMenuItemDeleteBook);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Books Management");

        jLabel10.setBackground(new java.awt.Color(64, 64, 64));
        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/books32.png"))); // NOI18N
        jLabel10.setText("Books Management");
        jLabel10.setFocusable(false);
        jLabel10.setOpaque(true);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnAdd);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_view.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnEdit);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/book_blue_delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnDelete);
        jToolBar1.add(jSeparator1);

        btnPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/printer_view.png"))); // NOI18N
        btnPreview.setText("Preview");
        btnPreview.setFocusable(false);
        btnPreview.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPreview.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnPreview);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/books/gui/resources/printer.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setFocusable(false);
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnPrint);

        tblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblBooks.setComponentPopupMenu(jPopupMenuBooks);
        tblBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBooks);

        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("ID:");

        lblIdBook.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTitle.setText("Title:");

        lblAuthor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAuthor.setText("Author:");

        lblTopic.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTopic.setText("Topic:");

        lblWarningTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/customers/gui/resources/warning16.png"))); // NOI18N

        lblWarningAuthor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/customers/gui/resources/warning16.png"))); // NOI18N

        lblWarningTopic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/csc/biblioteca/customers/gui/resources/warning16.png"))); // NOI18N

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitle)
                            .addComponent(txtAuthor)
                            .addComponent(txtTopic)
                            .addComponent(lblIdBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWarningTopic)
                            .addComponent(lblWarningAuthor)
                            .addComponent(lblWarningTitle, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(3, 3, 3))
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addGap(262, 262, 262))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblId)
                    .addComponent(lblIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWarningTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAuthor)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTopic)
                            .addComponent(txtTopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWarningAuthor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblWarningTopic)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBooksMouseClicked
            filaseleccionada= tblBooks.getSelectedRow();
            
          if (filaseleccionada <= -1){
              this.btnEdit.setEnabled(false);
              this.btnDelete.setEnabled(false);
          }
          else{
              this.btnEdit.setEnabled(true);
              this.btnDelete.setEnabled(true);
          }
        // TODO andd your handling code here:
    }//GEN-LAST:event_tblBooksMouseClicked

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOkActionPerformed

    private void jMenuItemDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemDeleteBookActionPerformed
    
    private void tblBooksMousePressed(java.awt.event.MouseEvent evt) {                                          
    if (evt.isPopupTrigger()) {
        showPopupMenu(evt);
    }        // TODO add your handling code here:
    }   
    
     private void tblBooksMouseReleased(java.awt.event.MouseEvent evt) {                                           
    if (evt.isPopupTrigger()) {
        showPopupMenu(evt);
    }        // TODO add your handling code here:
    }                       
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnPrint;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JMenuItem jMenuItemAddBook;
    private javax.swing.JMenuItem jMenuItemDeleteBook;
    private javax.swing.JMenuItem jMenuItemEditBook;
    private javax.swing.JPopupMenu jPopupMenuBooks;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdBook;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JLabel lblWarningAuthor;
    private javax.swing.JLabel lblWarningTitle;
    private javax.swing.JLabel lblWarningTopic;
    private javax.swing.JTable tblBooks;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtTopic;
    // End of variables declaration//GEN-END:variables

   public void setAddListener(ActionListener l, String command) {
        this.btnAdd.addActionListener(l);
        this.btnAdd.setActionCommand(command);
    }
    
    public void setEditListener(ActionListener l, String command) {
        this.btnEdit.addActionListener(l);
        this.btnEdit.setActionCommand(command);
    }
    
    public void setDeleteListener(ActionListener l, String command) {
        this.btnDelete.addActionListener(l);
        this.btnDelete.setActionCommand(command);
    }
    
    public void setPrintListener(ActionListener l, String command) {
        this.btnPrint.addActionListener(l);
        this.btnPrint.setActionCommand(command);
    }
    
    public void setPreviewListener(ActionListener l, String command) {
        this.btnPreview.addActionListener(l);
        this.btnPreview.setActionCommand(command);
    }
      /**
     * Registrar el controlador que gestionará las acciones del ratón sobre el listado de la ventana.
     * @param controlador Controlador de la ventana.
     */
    public void registraMouseListener(MouseListener controlador) {
        //this.tblBooks.addMouseListener(controlador);
    }
    
    public void setTableModel(AbstractTableModel m) {
        this.tblBooks.setModel(m);
    }
    
    public void setRowSorter(TableRowSorter sorter) {
        this.tblBooks.setRowSorter(sorter);
    }
    
    public int getSelectedRow() {
        return this.tblBooks.convertRowIndexToModel(this.tblBooks.getSelectedRow());
    }
    
    public void setSelectedRow(int indexRow) {
        int index = this.tblBooks.convertRowIndexToView(indexRow);
        this.tblBooks.setRowSelectionInterval(index, index);
    }
    
    public void setPopupAddListener(ActionListener l, String command) {
        this.jMenuItemAddBook.addActionListener(l);
        this.jMenuItemAddBook.setActionCommand(command);
    }
    
    public void setPopupEditListener(ActionListener l, String command) {
        this.jMenuItemEditBook.addActionListener(l);
        this.jMenuItemEditBook.setActionCommand(command);
    }
    
    public void setPopupDeleteListener(ActionListener l, String command) {
        this.jMenuItemDeleteBook.addActionListener(l);
        this.jMenuItemDeleteBook.setActionCommand(command);
    }
    
        private void showPopupMenu(MouseEvent e) {
        jPopupMenuBooks.show(this, e.getX()+5, e.getY()+100);
    }  
    
    public void changeLanguage() {
        LocaleManager lm = LocaleManager.getInstance();
        this.setTitle(lm.getText("TITLE_BOOKS_MANAGEMENT"));
        this.jLabel10.setText(lm.getText("TITLE_BOOKS_MANAGEMENT"));
        this.btnAdd.setText(lm.getText("BUTTON_ADD"));
        this.btnEdit.setText(lm.getText("BUTTON_EDIT"));
        this.btnDelete.setText(lm.getText("BUTTON_DELETE"));
        this.btnPreview.setText(lm.getText("BUTTON_PREVIEW"));
        this.btnPrint.setText(lm.getText("BUTTON_PRINT"));
        this.jMenuItemAddBook.setText(lm.getText("MENU_POPUP_ADD"));
        this.jMenuItemEditBook.setText(lm.getText("MENU_POPUP_EDIT"));
        this.jMenuItemDeleteBook.setText(lm.getText("MENU_POPUP_DELETE"));  
    }
    
    public void setOkListener(ActionListener l, String command) {
        this.btnOk.addActionListener(l);
        this.btnOk.setActionCommand(command);
    }
    
    public void setCancelListener(ActionListener l, String command) {
        this.btnCancel.addActionListener(l);
        this.btnCancel.setActionCommand(command);
    }
    
    public void setBook(BookDTO book) {
        if (book != null) {
            this.lblIdBook.setText(String.valueOf(book.getIdLibro()));
            this.txtTitle.setText(book.getNombre());
            this.txtAuthor.setText(book.getAutor());
            this.txtTopic.setText(book.getTema());
        }
    }
    
    public BookDTO getBook() {
        BookDTO dto = new BookDTO();
        if (!"".equals(this.lblIdBook.getText())) {
            dto.setIdLibro(Integer.parseInt(this.lblIdBook.getText()));
        }
        dto.setNombre(this.txtTitle.getText());
        dto.setAutor(this.txtAuthor.getText());
        dto.setTema(this.txtTopic.getText());
        return dto;
    }
    
    public void translate() {
        LocaleManager lm = LocaleManager.getInstance();
        this.setTitle(lm.getText("TITLE_BOOK_DETAILS"));
        this.jLabel10.setText(lm.getText("TITLE_BOOK_DETAILS"));
        this.lblTitle.setText(lm.getText("LABEL_TITLE"));
        this.lblAuthor.setText(lm.getText("LABEL_AUTHOR"));
        this.lblTopic.setText(lm.getText("LABEL_TOPIC"));
        this.btnOk.setText(lm.getText("BUTTON_OK"));
        this.btnCancel.setText(lm.getText("BUTTON_CANCEL"));
    }
    
    public void hideWarnings() {
        this.lblWarningTitle.setVisible(false);
        this.lblWarningAuthor.setVisible(false);
        this.lblWarningTopic.setVisible(false);
    }
    
    public void showWarningTitle(Boolean visible) {
        this.lblWarningTitle.setVisible(visible);
    }
    
    public void showWarningAuthor(Boolean visible) {
        this.lblWarningAuthor.setVisible(visible);
    }
    
    public void showWarningTopic(Boolean visible) {
        this.lblWarningTopic.setVisible(visible);
    }
    
    public void setEstado(BooksManagementController.Estado estado) {
        boolean haySeleccionada = (this.tblBooks.getSelectedRow() > 0);
                
        switch (estado) {
            case CREACION:
                // Habilitar la ficha (Aceptar, Cancelar) y deshabilitar tabla (Insertar, Editar, Eliminar)
                this.activarFicha(true);
                this.btnAdd.setEnabled(false);
                this.btnPrint.setEnabled(false);
                this.btnEdit.setEnabled(false);
                this.btnDelete.setEnabled(false);
                this.tblBooks.setEnabled(false);
		this.btnPreview.setEnabled(false);
                break;
            case EDICION:
                // Habilitar la ficha (Aceptar, Cancelar) y deshabilitar tabla (Insertar, Editar, Eliminar)
                this.activarFicha(true);
                this.btnAdd.setEnabled(false);
                this.btnPrint.setEnabled(false);
                this.btnEdit.setEnabled(false);
                this.btnDelete.setEnabled(false);
                this.tblBooks.setEnabled(false);
		this.btnPreview.setEnabled(false);
                break;
                
            case LECTURA:
                // Deshabilitar la ficha (Aceptar, Cancelar) y habilitar tabla (Insertar, Editar)
                this.activarFicha(false);
                this.btnAdd.setEnabled(true);
                this.btnPrint.setEnabled(true);
                this.tblBooks.setEnabled(true);
                this.tblBooks.requestFocus();
                this.btnEdit.setEnabled(false);
                this.btnDelete.setEnabled(false);
                this.btnPreview.setEnabled(true);
                break;
                
            case MARCADO:
                // Deshabilitar la ficha (Aceptar, Cancelar) y habilitar tabla (Insertar, Editar, Eliminar)
                this.activarFicha(false);
                this.btnAdd.setEnabled(true);
                this.btnPrint.setEnabled(true);
                this.tblBooks.setEnabled(true);
                this.tblBooks.requestFocus();
                this.btnEdit.setEnabled(true);
                this.btnDelete.setEnabled(true);
                this.btnPreview.setEnabled(true);
                break;
        }
    }
    
     /**
     * Método para activar o desactivar los campos de la ficha de edición de los
     * datos del libro.
     * @param activar Indica si hay que habilitar los campos (TRUE) o no (FALSE).
     */
    public void activarFicha(boolean activar) {
        this.txtAuthor.setEnabled(activar);
        this.txtTitle.setEnabled(activar);
        this.txtTopic.setEnabled(activar);
        this.btnOk.setEnabled(activar);
        this.btnCancel.setEnabled(activar);
    }
    
    /** Método para limpiar los datos de la ficha de edición del libro. */
    public void limpiarFicha() {
        this.lblIdBook.setText("");
        this.txtAuthor.setText("");
        this.txtTopic.setText("");
        this.txtTitle.setText("");
    } 
}
